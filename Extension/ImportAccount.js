const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["MnemonicWordListing.js","index.js","index.css","AccountImportSuccess.js","stringUtil.js","copy.js","check.js"])))=>i.map(i=>d[i]);
import{x as i,r,_ as l,z as m,o as A,u as S,j as e,A as F,C as _,d as P,e as I,g as v,h as C,B as E,w as y}from"./index.js";import{u as N,F as M,a as T,b as z,c as D,I as L,d as V,e as B,t as H}from"./zod.js";import{L as R}from"./loader.js";import{D as O}from"./download.js";const k=i(r.lazy(()=>l(()=>import("./MnemonicWordListing.js"),__vite__mapDeps([0,1,2])))),q=i(r.lazy(()=>l(()=>import("./AccountImportSuccess.js"),__vite__mapDeps([3,1,2,4,5,6])))),W=m.object({mnemonicPhrases:m.string().min(1,"Mnemonic phrases are required")}),Q=A(()=>{const[d,u]=r.useState(),[h,p]=r.useState(!1),{zondStore:x}=S(),{zondInstance:t,setActiveAccount:j}=x;async function f(a){try{const s=t==null?void 0:t.accounts.seedToAccount(y(a.mnemonicPhrases.trim()));s?(window.scrollTo(0,0),u(s),await j(s.address),p(!0)):n.setError("mnemonicPhrases",{message:"Account could not be imported from the mnemonic phrases"})}catch(s){n.setError("mnemonicPhrases",{message:`There was an error while reading the mnemonic phrases. ${s}`})}}const c=N({resolver:H(W),mode:"onChange",reValidateMode:"onSubmit",defaultValues:{mnemonicPhrases:""}}),{handleSubmit:g,watch:w,control:n,formState:{isSubmitting:o,isValid:b}}=c;return e.jsxs(e.Fragment,{children:[e.jsx("img",{className:"fixed z-0 h-96 w-96 -translate-x-8 animate-rotate-scale overflow-hidden opacity-30",src:"tree.svg"}),e.jsx("div",{className:"relative z-10 p-8",children:h?e.jsx(q,{account:d}):e.jsxs(M,{...c,children:[e.jsx(F,{}),e.jsx("form",{name:"importAccount","aria-label":"importAccount",className:"w-full",onSubmit:g(f),children:e.jsxs(_,{children:[e.jsx(P,{children:e.jsx(I,{children:"Import an existing account"})}),e.jsxs(v,{className:"space-y-2",children:[e.jsx(T,{control:n,name:"mnemonicPhrases",render:({field:a})=>e.jsxs(z,{children:[e.jsx(D,{children:e.jsx(L,{...a,"aria-label":a.name,autoComplete:"off",disabled:o,placeholder:"Mnemonic Phrases"})}),e.jsx(V,{children:"Paste the mnemonic phrases"}),e.jsx(B,{})]})}),e.jsx(k,{mnemonic:w().mnemonicPhrases})]}),e.jsx(C,{children:e.jsxs(E,{disabled:o||!b,className:"w-full",type:"submit",children:[o?e.jsx(R,{className:"mr-2 h-4 w-4 animate-spin"}):e.jsx(O,{className:"mr-2 h-4 w-4"}),o?"Importing account":"Import account"]})})]})})]})})]})});export{Q as default};
